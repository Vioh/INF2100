Space:
- Actual space
- New line (\n)
- Tab (\t)

Normal Character:
- Letter: (a-z) (A-Z)
- Digit: (0-9)

Special Character:
	= ; : , . ( ) < > + - * [ ]
	
Quote: 
	'

Comment Character:
	/* {

Illegal Character: The rest!

================================================================================
================================================================================

RULES FOR READING TOKEN:
If i is:
- Space --> Skip (by updating i)
- Normal --> Let j search for Space, Special, Comment, or Illegal
- Special --> Let j search for Space, Normal, Comment, or Illegal
- Quote -->
	Increase i
	If i is still a quote, then
		If next 2 characters after i are also quotes, then
			Add new CHAR LITERAL token for the symbol: '
			Increase i to i+1
		Else: ERROR!!!
	Else 
		If j=i+1 is a quote, then
			substring(i,j) is a new token
			Increase i to j+1
		Else: ERROR!!!
- Comment -->
	If it is a slash (/)
		then check if next char is arterisk (*) and let j search for symbols: */
	Else, let j search for the symbol: }
	Finally, increase i to j+1
- Illegal --> ERROR!!!

POSSIBLE METHODS FOR READING TOKEN:
	private boolean isSpecial(char c) {
		if(c == '+')....
	}
	private boolean isSpace(char c) {}